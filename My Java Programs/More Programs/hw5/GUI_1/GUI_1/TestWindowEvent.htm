<HTML>
<HEAD>
<TITLE>Intro to Java Programming, 4E - TestWindowEvent</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
</HEAD>
<basefont size=5><pre><FONT COLOR="#008000">// TestWindowEvent.java: Create a frame to test window events
<FONT COLOR="#000000"><FONT COLOR="#000080"><B>import</B></FONT><FONT COLOR="#000000"> java.awt.*;
<FONT COLOR="#000080"><B>import</B></FONT><FONT COLOR="#000000"> java.awt.event.*;
<FONT COLOR="#000080"><B>import</B></FONT><FONT COLOR="#000000"> javax.swing.JFrame;

<FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>class</B></FONT><FONT COLOR="#000000"> TestWindowEvent <FONT COLOR="#000080"><B>extends</B></FONT><FONT COLOR="#000000"> JFrame
  <FONT COLOR="#000080"><B>implements</B></FONT><FONT COLOR="#000000"> WindowListener {
  <FONT COLOR="#008000">// Main method
<FONT COLOR="#000000">  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>static</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> main(String[] args) {
    TestWindowEvent frame = <FONT COLOR="#000080"><B>new</B></FONT><FONT COLOR="#000000"> TestWindowEvent();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setTitle("Test Window Event");
    frame.setSize(100, 80);
    frame.setVisible(true);
  }

  <FONT COLOR="#008000">/** Default constructor */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> TestWindowEvent() {
    addWindowListener(this);  <FONT COLOR="#008000">// Register listener
<FONT COLOR="#000000">  }

  <FONT COLOR="#008000">/** 
   * Handler for window deiconified event
   * Invoked when a window is changed from a minimized
   * to a normal state.
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowDeiconified(WindowEvent event) {
    System.out.println("Window deiconified");
  }

  <FONT COLOR="#008000">/** 
   * Handler for window iconified event
   * Invoked when a window is changed from a normal to a
   * minimized state. For many platforms, a minimized window
   * is displayed as the icon specified in the window's
   * iconImage property.
   * @see Frame#setIconImage
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowIconified(WindowEvent event) {
    System.out.println("Window iconified");
  }

  <FONT COLOR="#008000">/** 
   * Handler for window activated event
   * Invoked when the window is set to be the user's
   * active window, which means the window (or one of its
   * subcomponents) will receive keyboard events.
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowActivated(WindowEvent event) {
    System.out.println("Window activated");
  }

  <FONT COLOR="#008000">/** 
   * Handler for window deactivated event
   * Invoked when a window is no longer the user's active
   * window, which means that keyboard events will no longer
   * be delivered to the window or its subcomponents.
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowDeactivated(WindowEvent event) {
    System.out.println("Window deactivated");
  }

  <FONT COLOR="#008000">/** 
   * Handler for window opened event
   * Invoked the first time a window is made visible.
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowOpened(WindowEvent event) {
    System.out.println("Window opened");
  }

  <FONT COLOR="#008000">/** 
   * Handler for window closing event
   * Invoked when the user attempts to close the window
   * from the window's system menu.  If the program does not
   * explicitly hide or dispose the window while processing
   * this event, the window close operation will be cancelled.
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowClosing(WindowEvent event) {
    System.out.println("Window closing");
  }

  <FONT COLOR="#008000">/** 
   * Handler for window closed event
   * Invoked when a window has been closed as the result
   * of calling dispose on the window.
    */<FONT COLOR="#000000">
  <FONT COLOR="#000080"><B>public</B></FONT><FONT COLOR="#000000"> <FONT COLOR="#000080"><B>void</B></FONT><FONT COLOR="#000000"> windowClosed(WindowEvent event) {
    System.out.println("Window closed");
  }
}
</pre>